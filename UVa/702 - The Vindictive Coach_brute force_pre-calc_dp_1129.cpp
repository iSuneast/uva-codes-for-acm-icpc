/*
 * 702 - The Vindictive Coach
 *
 * Brute force...
 *
 * I can't find out a better solution....
 * so just print the answer currency...
 *
 * O( N * 2^N *2 ) DP, brute force general the answer...
 *
 * Orz....
 */

#include<cstdio>
#include<iostream>
#include<string>
#define MAXN 23
using namespace std;

string s[MAXN][MAXN];

void init()
{
s[1][1]="1";
s[2][1]="1";
s[2][2]="1";
s[3][1]="1";
s[3][2]="1";
s[3][3]="1";
s[4][1]="1";
s[4][2]="1";
s[4][3]="2";
s[4][4]="2";
s[5][1]="1";
s[5][2]="2";
s[5][3]="4";
s[5][4]="5";
s[5][5]="5";
s[6][1]="2";
s[6][2]="5";
s[6][3]="10";
s[6][4]="14";
s[6][5]="16";
s[6][6]="16";
s[7][1]="5";
s[7][2]="16";
s[7][3]="32";
s[7][4]="46";
s[7][5]="56";
s[7][6]="61";
s[7][7]="61";
s[8][1]="16";
s[8][2]="61";
s[8][3]="122";
s[8][4]="178";
s[8][5]="224";
s[8][6]="256";
s[8][7]="272";
s[8][8]="272";
s[9][1]="61";
s[9][2]="272";
s[9][3]="544";
s[9][4]="800";
s[9][5]="1024";
s[9][6]="1202";
s[9][7]="1324";
s[9][8]="1385";
s[9][9]="1385";
s[10][1]="272";
s[10][2]="1385";
s[10][3]="2770";
s[10][4]="4094";
s[10][5]="5296";
s[10][6]="6320";
s[10][7]="7120";
s[10][8]="7664";
s[10][9]="7936";
s[10][10]="7936";
s[11][1]="1385";
s[11][2]="7936";
s[11][3]="15872";
s[11][4]="23536";
s[11][5]="30656";
s[11][6]="36976";
s[11][7]="42272";
s[11][8]="46366";
s[11][9]="49136";
s[11][10]="50521";
s[11][11]="50521";
s[12][1]="7936";
s[12][2]="50521";
s[12][3]="101042";
s[12][4]="150178";
s[12][5]="196544";
s[12][6]="238816";
s[12][7]="275792";
s[12][8]="306448";
s[12][9]="329984";
s[12][10]="345856";
s[12][11]="353792";
s[12][12]="353792";
s[13][1]="50521";
s[13][2]="353792";
s[13][3]="707584";
s[13][4]="1053440";
s[13][5]="1383424";
s[13][6]="1689872";
s[13][7]="1965664";
s[13][8]="2204480";
s[13][9]="2401024";
s[13][10]="2551202";
s[13][11]="2652244";
s[13][12]="2702765";
s[13][13]="2702765";
s[14][1]="353792";
s[14][2]="2702765";
s[14][3]="5405530";
s[14][4]="8057774";
s[14][5]="10608976";
s[14][6]="13010000";
s[14][7]="15214480";
s[14][8]="17180144";
s[14][9]="18870016";
s[14][10]="20253440";
s[14][11]="21306880";
s[14][12]="22014464";
s[14][13]="22368256";
s[14][14]="22368256";
s[15][1]="2702765";
s[15][2]="22368256";
s[15][3]="44736512";
s[15][4]="66750976";
s[15][5]="88057856";
s[15][6]="108311296";
s[15][7]="127181312";
s[15][8]="144361456";
s[15][9]="159575936";
s[15][10]="172585936";
s[15][11]="183194912";
s[15][12]="191252686";
s[15][13]="196658216";
s[15][14]="199360981";
s[15][15]="199360981";
s[16][1]="22368256";
s[16][2]="199360981";
s[16][3]="398721962";
s[16][4]="595380178";
s[16][5]="786632864";
s[16][6]="969827776";
s[16][7]="1142413712";
s[16][8]="1301989648";
s[16][9]="1446351104";
s[16][10]="1573532416";
s[16][11]="1681843712";
s[16][12]="1769901568";
s[16][13]="1836652544";
s[16][14]="1881389056";
s[16][15]="1903757312";
s[16][16]="1903757312";
s[17][1]="199360981";
s[17][2]="1903757312";
s[17][3]="3807514624";
s[17][4]="5688903680";
s[17][5]="7525556224";
s[17][6]="9295457792";
s[17][7]="10977301504";
s[17][8]="12550833920";
s[17][9]="13997185024";
s[17][10]="15299174672";
s[17][11]="16441588384";
s[17][12]="17411416160";
s[17][13]="18198049024";
s[17][14]="18793429202";
s[17][15]="19192151164";
s[17][16]="19391512145";
s[17][17]="19391512145";
s[18][1]="1903757312";
s[18][2]="19391512145";
s[18][3]="38783024290";
s[18][4]="57975175454";
s[18][5]="76768604656";
s[18][6]="94966653680";
s[18][7]="112378069840";
s[18][8]="128819658224";
s[18][9]="144118832896";
s[18][10]="158116017920";
s[18][11]="170666851840";
s[18][12]="181644153344";
s[18][13]="190939611136";
s[18][14]="198465167360";
s[18][15]="204154071040";
s[18][16]="207961585664";
s[18][17]="209865342976";
s[18][18]="209865342976";
s[19][1]="19391512145";
s[19][2]="209865342976";
s[19][3]="419730685952";
s[19][4]="627692271616";
s[19][5]="831846342656";
s[19][6]="1030311510016";
s[19][7]="1221251121152";
s[19][8]="1402895274496";
s[19][9]="1573562126336";
s[19][10]="1731678144256";
s[19][11]="1875796977152";
s[19][12]="2004616635376";
s[19][13]="2116994705216";
s[19][14]="2211961358896";
s[19][15]="2288729963552";
s[19][16]="2346705139006";
s[19][17]="2385488163296";
s[19][18]="2404879675441";
s[19][19]="2404879675441";
s[20][1]="209865342976";
s[20][2]="2404879675441";
s[20][3]="4809759350882";
s[20][4]="7195247514178";
s[20][5]="9541952653184";
s[20][6]="11830682616736";
s[20][7]="14042643975632";
s[20][8]="16159638680848";
s[20][9]="18164255316224";
s[20][10]="20040052293376";
s[20][11]="21771730437632";
s[20][12]="23345292563968";
s[20][13]="24748187838464";
s[20][14]="25969438959616";
s[20][15]="26999750469632";
s[20][16]="27831596812288";
s[20][17]="28459289083904";
s[20][18]="28879019769856";
s[20][19]="29088885112832";
s[20][20]="29088885112832";
s[21][1]="2404879675441";
s[21][2]="29088885112832";
s[21][3]="58177770225664";
s[21][4]="87056789995520";
s[21][5]="115516079079424";
s[21][6]="143347675891712";
s[21][7]="170347426361344";
s[21][8]="196316865320960";
s[21][9]="221065053159424";
s[21][10]="244410345723392";
s[21][11]="266182076161024";
s[21][12]="286222128454400";
s[21][13]="304386383770624";
s[21][14]="320546022451472";
s[21][15]="334588666427104";
s[21][16]="346419349043840";
s[21][17]="355961301697024";
s[21][18]="363156549211202";
s[21][19]="367966308562084";
s[21][20]="370371188237525";
s[21][21]="370371188237525";
s[22][1]="29088885112832";
s[22][2]="370371188237525";
s[22][3]="740742376475050";
s[22][4]="1108708685037134";
s[22][5]="1471865234248336";
s[22][6]="1827826535945360";
s[22][7]="2174245884989200";
s[22][8]="2508834551416304";
s[22][9]="2829380573867776";
s[22][10]="3133766957638400";
s[22][11]="3419989086092800";
s[22][12]="3686171162253824";
s[22][13]="3930581507977216";
s[22][14]="4151646561136640";
s[22][15]="4347963426457600";
s[22][16]="4518310852818944";
s[22][17]="4661658528710656";
s[22][18]="4777174607790080";
s[22][19]="4864231397785600";
s[22][20]="4922409168011264";
s[22][21]="4951498053124096";
s[22][22]="4951498053124096";
}

int main()
{
#ifndef ONLINE_JUDGE
    freopen("in","r",stdin);
#endif

    init();
    int n,k;
    while(scanf("%d%d",&n,&k)!=EOF)
        cout<<s[n][k]<<endl;

    return 0;
}


/*
 *         General the Answer Table

#include<cstdio>

int main()
{
    freopen("in","r",stdin);
    freopen("out","w",stdout);

    char s[30];
    for(int i=1;i<=22;++i)
    {
        for(int j=1;j<=i;++j)
        {
            scanf("%s",s);
            printf("s[%d][%d]=\"%s\";\n",i,j,s);
        }
    }

    return 0;
}
 */

/*
 *          Brute Force Code to General the Answer

#include<cstdio>
#include<cstring>
#include<iostream>
#include<cmath>
#include<string>
#include<queue>
#include<algorithm>
#include<map>
#include<vector>
#include<ctime>
#define MAXN 22
using namespace std;
const int INF=0x3f3f3f3f;
const double eps=1e-9;
typedef long long ll;
void up(int state,int pre);
void down(int state,int pre);

ll dp[2][MAXN][1<<MAXN];
int n,k;

void DP()
{
    for(int i=1;i<(1<<n);++i)
    {
        for(int j=0;j<n;++j)
        {
            //UP
            if(dp[0][j][i])
            {
                for(int k=j+1;k<n;++k)
                {
                    if(!(i&(1<<k)))
                    {
                        dp[1][k][i+(1<<k)]+=dp[0][j][i];
                    }
                }
            }
            
            //DOWN
            if(dp[1][j][i])
            {
                for(int k=0;k<j;++k)
                {
                    if(!(i&(1<<k)))
                    {
                        dp[0][k][i+(1<<k)]+=dp[1][j][i];
                    }
                }
            }
        }

    }
}

ll process()
{
    if(n<3)
        return 1;

    memset(dp,0,sizeof(dp));

    if(!k)
        dp[0][1][7]=1;
    else
        dp[1][k][1<<k]=1;

    DP();

    ll key=0;
    for(int i=0;i<n;++i)
        key+=dp[0][i][(1<<n)-1]+dp[1][i][(1<<n)-1];
    return key;
}

void GeneralData()
{
    freopen("in","w",stdout);
    
    for(int i=1;i<=22;++i)
        for(int j=1;j<=i;++j)
            printf("%d %d\n",i,j);
}

int main()
{
#ifndef ONLINE_JUDGE
    freopen("in","r",stdin);
#endif

#ifdef DEBUG
    GeneralData();
    return 0;
#endif

    while(scanf("%d%d",&n,&k)!=EOF)
    {
        --k;
        printf("%lld\n",process());
    }

    return 0;
}

 */

